# pip install progpt

import tkinter as tk
from tkinter import filedialog
from ProGPT import Generative

# Function to interact with ChatGPT based on the input text
def chat_with_gpt():
    file_path = entry_file_path.get()
    try:
        with open(file_path, 'r') as file:
            content = file.read()
            first_50_words = ' '.join(content.split()[:50])
            chatgpt_output = bot.prompt(first_50_words + " Is this generated by you")
            output_text.config(state='normal')
            output_text.delete('1.0', tk.END)
            output_text.insert(tk.END, chatgpt_output)
            output_text.config(state='disabled')
    except FileNotFoundError:
        output_text.config(state='normal')
        output_text.delete('1.0', tk.END)
        output_text.insert(tk.END, f"File not found at path
                           : {file_path}")
        output_text.config(state='disabled')
    except Exception as e:
        output_text.config(state='normal')
        output_text.delete('1.0', tk.END)
        output_text.insert(tk.END, f"An error occurred: {e}")
        output_text.config(state='disabled')

# Initialize ChatGPT
#Insert your access token
access_token = "xxxxx"
bot = Generative(access_token)

# Create the main application window
app = tk.Tk()
app.title("ChatGPT Text Interaction")

# Create and place widgets
label_file_path = tk.Label(app, text="Enter file path:")
label_file_path.grid(row=0, column=0, padx=10, pady=10)

entry_file_path = tk.Entry(app, width=50)
entry_file_path.grid(row=0, column=1, padx=10, pady=10)

button_browse = tk.Button(app, text="Browse", command=lambda: entry_file_path.insert(tk.END, filedialog.askopenfilename()))
button_browse.grid(row=0, column=2, padx=10, pady=10)

button_chat = tk.Button(app, text="Chat with GPT", command=chat_with_gpt)
button_chat.grid(row=1, column=0, columnspan=3, padx=10, pady=10)

output_text = tk.Text(app, height=10, width=60)
output_text.grid(row=2, column=0, columnspan=3, padx=10, pady=10)
output_text.config(state='disabled')

# Run the application
app.mainloop()
